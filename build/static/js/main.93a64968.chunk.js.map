{"version":3,"sources":["components/elements/Header/Header.js","config.js","components/elements/HeroImage/HeroImage.js","components/elements/SearchBar/SearchBar.js","components/elements/FourColGrid/FourColGrid.js","components/elements/MovieThumb/MovieThumb.js","components/elements/LoadMoreBtn/LoadMoreBtn.js","components/elements/Spinner/Spinner.js","components/Home/Home.js","components/elements/Navigation/Navigation.js","components/elements/MovieInfo/MovieInfo.js","helpers.js","components/elements/MovieInfoBar/MovieInfoBar.js","components/elements/Actor/Actor.js","components/Movie/Movie.js","components/elements/NotFound/NotFound.js","components/App/App.js","index.js"],"names":["Header","className","to","src","alt","API_URL","API_KEY","IMAGE_BASE_URL","HeroImage","props","style","background","image","title","text","SearchBar","state","value","timeout","doSearch","e","setState","target","clearTimeout","setTimeout","callback","preventDefault","name","size","type","placeholder","onChange","this","onBlur","Component","FourColGrid","header","loading","children","map","element","i","key","MovieThumb","movieId","movieName","clickable","pathname","LoadMoreBtn","onClick","Spinner","Home","movies","heroImage","currentPage","totalPages","searchTerm","searchItems","endpoint","fetchItems","loadMoreItems","fetch","then","result","json","results","page","total_pages","sessionStorage","setItem","JSON","stringify","catch","error","console","getItem","parse","backdrop_path","original_title","overview","poster_path","id","Navigation","movie","MovieInfo","directors","min","max","optimum","low","high","vote_average","length","convertMoney","money","Intl","NumberFormat","currency","minimumFractionDigits","format","MovieInfoBar","time","hours","Math","floor","mins","calcTime","budget","revenue","Actor","actor","profile_path","character","Movie","actors","match","params","status_code","crew","filter","member","job","cast","localStorage","location","runtime","NotFound","App","Fragment","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.93a64968.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Header.css\";\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"rmdb-header\">\r\n      <div className=\"rmdb-header-content\">\r\n        <Link to=\"/\">\r\n          <img\r\n            className=\"rmdb-logo\"\r\n            src=\"./images/reactMovie_logo.png\"\r\n            alt=\"rmdb-logo\"\r\n          />\r\n        </Link>\r\n        <img\r\n          className=\"rmdb-tmdb-logo\"\r\n          src=\"./images/tmdb_logo.png\"\r\n          alt=\"tmdb-logo\"\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","// Configuration for TMDB\n// To se the latest configuration fetch it from https://api.themoviedb.org/3/configuration?api_key=019e8f375549e0bbd4a4191862ebc88f\n\nconst API_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"6c4f386053cc75eb2f170371d59b7297\";\n\n// Images\n// An image URL looks like this example:\n// http://image.tmdb.org/t/p/w780/bOGkgRGdhrBYJSLpXaxhXVstddV.jpg\n\nconst IMAGE_BASE_URL = \"https://image.tmdb.org/t/p/\";\n\n//Sizes: w300, w780, w1280, original\nconst BACKDROP_SIZE = \"w1280\";\n\n// w92, w154, w185, w342, w500, w780, original\nconst POSTER_SIZE = \"w500\";\n\nexport { API_URL, API_KEY, IMAGE_BASE_URL, BACKDROP_SIZE, POSTER_SIZE };\n","import React from \"react\";\r\nimport \"./HeroImage.css\";\r\n\r\nconst HeroImage = props => {\r\n  return (\r\n    <div\r\n      className=\"rmdb-heroimage\"\r\n      style={{\r\n        background: `linear-gradient(to bottom, rgba(0,0,0,0)\r\n          39%, rgba(0,0,0,0)\r\n          41%, rgba(0,0,0,0.65)\r\n          100%),\r\n          url('${props.image}'), #1c1c1c `\r\n      }}\r\n    >\r\n      <div className=\"rmdb-heroimage-content\">\r\n        <div className=\"rmdb-heroimage-text\">\r\n          <h1>{props.title}</h1>\r\n          <p>{props.text}</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroImage;\r\n","import React, { Component } from \"react\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport \"./SearchBar.css\";\r\n\r\nclass SearchBar extends Component {\r\n  state = {\r\n    value: \"\"\r\n  };\r\n\r\n  timeout = null;\r\n  // ?the state is always an empty string hence we must work on the dosearch\r\n  doSearch = e => {\r\n    this.setState({ value: e.target.value });\r\n    clearTimeout(this.timeout);\r\n\r\n    this.timeout = setTimeout(() => {\r\n      this.props.callback(this.state.value);\r\n    }, 500);\r\n    e.preventDefault();\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"rmdb-searchbar\">\r\n        <div className=\"rmdb-searchbar-content\">\r\n          <FontAwesome className=\"rmdb-fa-search\" name=\"search\" size=\"2x\" />\r\n          <input\r\n            type=\"text\"\r\n            className=\"rmdb-searchbar-input\"\r\n            placeholder=\"Search\"\r\n            onChange={this.doSearch}\r\n            onBlur={this.doSearch}\r\n            value={this.state.value}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBar;\r\n","import React from \"react\";\r\nimport \"./FourColGrid.css\";\r\n\r\nconst FourColGrid = props => {\r\n  // ?Function RenderElement\r\n  const renderElements = () => {\r\n    const gridElements = props.children.map((element, i) => {\r\n      return (\r\n        <div key={i} className=\"rmdb-grid-element\">\r\n          {element}\r\n        </div>\r\n      );\r\n    });\r\n    return gridElements;\r\n  };\r\n\r\n  return (\r\n    <div className=\"rmdb-grid\">\r\n      {props.header && !props.loading ? <h1>{props.header}</h1> : null}\r\n      <div className=\"rmdb-grid-content\">{renderElements()}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FourColGrid;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./MovieThumb.css\";\r\n\r\nconst MovieThumb = ({ image, movieId, movieName, clickable }) => (\r\n  <div className=\"rmdb-moviethumb\">\r\n    {clickable ? (\r\n      <Link to={{ pathname: `/${movieId}`, movieName: `${movieName}` }}>\r\n        <img className=\"clickable\" src={image} alt=\"moviethumb\" />\r\n      </Link>\r\n    ) : (\r\n      <img src={image} alt=\"moviethumb\" />\r\n    )}\r\n  </div>\r\n);\r\n\r\nMovieThumb.propTypes = {\r\n  image: PropTypes.string,\r\n  movieId: PropTypes.number,\r\n  movieName: PropTypes.string,\r\n  clickable: PropTypes.bool\r\n};\r\n\r\nexport default MovieThumb;\r\n","import React from \"react\";\r\nimport \"./LoadMoreBtn.css\";\r\n\r\nconst LoadMoreBtn = props => {\r\n  return (\r\n    <div className=\"rmdb-loadmorebtn\" onClick={props.onClick}>\r\n      <p>{props.text}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadMoreBtn;\r\n","import React from \"react\";\r\nimport \"./Spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"loader\"></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from 'react';\r\nimport { API_URL, API_KEY, IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from '../../config';\r\nimport HeroImage from '../elements/HeroImage/HeroImage';\r\nimport SearchBar from '../elements/SearchBar/SearchBar';\r\nimport FourColGrid from '../elements/FourColGrid/FourColGrid';\r\nimport MovieThumb from '../elements/MovieThumb/MovieThumb';\r\nimport LoadMoreBtn from '../elements/LoadMoreBtn/LoadMoreBtn';\r\nimport Spinner from '../elements/Spinner/Spinner';\r\nimport './Home.css';\r\n\r\nclass Home extends Component {\r\n  state = {\r\n    movies: [],\r\n    heroImage: null,\r\n    loading: false,\r\n    currentPage: 0,\r\n    totalPages: 0,\r\n    searchTerm: ''\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (sessionStorage.getItem('HomeState')) {\r\n      let state = JSON.parse(sessionStorage.getItem('HomeState'))\r\n      this.setState({ ...state })\r\n    } else {\r\n      this.setState({ loading: true })\r\n      const endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  searchItems = (searchTerm) => {\r\n    let endpoint = '';\r\n    this.setState({\r\n      movies: [],\r\n      loading: true,\r\n      searchTerm\r\n    })\r\n\r\n    if (searchTerm === \"\") {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=1`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  loadMoreItems = () => {\r\n    // ES6 Destructuring the state\r\n    const { searchTerm, currentPage } = this.state;\r\n\r\n    let endpoint = '';\r\n    this.setState({ loading: true })\r\n\r\n    if (searchTerm === '') {\r\n      endpoint = `${API_URL}movie/popular?api_key=${API_KEY}&language=en-US&page=${currentPage + 1}`;\r\n    } else {\r\n      endpoint = `${API_URL}search/movie?api_key=${API_KEY}&language=en-US&query=${searchTerm}&page=${currentPage + 1}`;\r\n    }\r\n    this.fetchItems(endpoint);\r\n  }\r\n\r\n  fetchItems = (endpoint) => {\r\n    // ES6 Destructuring the state\r\n    const { movies, heroImage, searchTerm } = this.state;\r\n\r\n    fetch(endpoint)\r\n    .then(result => result.json())\r\n    .then(result => {\r\n      this.setState({\r\n        movies: [...movies, ...result.results],\r\n        heroImage: heroImage || result.results[0],\r\n        loading: false,\r\n        currentPage: result.page,\r\n        totalPages: result.total_pages\r\n      }, () => {\r\n        // Remember state for the next mount if we´re not in a search view\r\n        if (searchTerm === \"\") {\r\n          sessionStorage.setItem('HomeState', JSON.stringify(this.state));\r\n        }\r\n      })\r\n    })\r\n    .catch(error => console.error('Error:', error))\r\n  }\r\n\r\n  render() {\r\n    // ES6 Destructuring the state\r\n    const { movies, heroImage, loading, currentPage, totalPages, searchTerm } = this.state;\r\n\r\n    return (\r\n      <div className=\"rmdb-home\">\r\n        {heroImage ?\r\n          <div>\r\n            <HeroImage\r\n              image={`${IMAGE_BASE_URL}${BACKDROP_SIZE}${heroImage.backdrop_path}`}\r\n              title={heroImage.original_title}\r\n              text={heroImage.overview}\r\n            />\r\n            <SearchBar callback={this.searchItems}/>\r\n          </div> : null }\r\n          <div className=\"rmdb-home-grid\">\r\n            <FourColGrid\r\n              header={searchTerm ? 'Search Result' : 'Popular Movies'}\r\n              loading={loading}\r\n            >\r\n              {movies.map( (element, i) => (\r\n                <MovieThumb\r\n                  key={i}\r\n                  clickable={true}\r\n                  image={element.poster_path ? `${IMAGE_BASE_URL}${POSTER_SIZE}${element.poster_path}` : './images/no_image.jpg'}\r\n                  movieId={element.id}\r\n                  movieName={element.original_title}\r\n                />\r\n              ))}\r\n            </FourColGrid>\r\n            {loading ? <Spinner /> : null}\r\n            {(currentPage <= totalPages && !loading) ?\r\n              <LoadMoreBtn text=\"Load More\" onClick={this.loadMoreItems} />\r\n              : null\r\n            }\r\n          </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Navigation.css\";\r\n\r\nconst Navigation = props => {\r\n  return (\r\n    <div className=\"rmdb-navigation\">\r\n      <div className=\"rmdb-navigation-content\">\r\n        <Link to=\"/\">\r\n          <p>Home</p>\r\n        </Link>\r\n        <p>/</p>\r\n        <p>{props.movie}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navigation;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL, POSTER_SIZE, BACKDROP_SIZE } from \"../../../config\";\r\nimport PropTypes from \"prop-types\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport MovieThumb from \"../MovieThumb/MovieThumb\";\r\nimport \"./MovieInfo.css\";\r\n\r\nconst MovieInfo = ({ movie, directors }) => (\r\n  <div\r\n    className=\"rmdb-movieinfo\"\r\n    style={{\r\n      background: movie.backdrop_path\r\n        ? `url('${IMAGE_BASE_URL}${BACKDROP_SIZE}${movie.backdrop_path}')`\r\n        : \"#000\"\r\n    }}\r\n  >\r\n    <div className=\"rmdb-movieinfo-content\">\r\n      <div className=\"rmdb-movieinfo-thumb\">\r\n        <MovieThumb\r\n          image={\r\n            movie.poster_path\r\n              ? `${IMAGE_BASE_URL}${POSTER_SIZE}${movie.poster_path}`\r\n              : \"./images/no_image.jpg\"\r\n          }\r\n          clickable={false}\r\n        />\r\n      </div>\r\n      <div className=\"rmdb-movieinfo-text\">\r\n        <h1>{movie.title}</h1>\r\n        <h3>PLOT</h3>\r\n        <p>{movie.overview}</p>\r\n        <h3>IMDB RATING</h3>\r\n        <div className=\"rmdb-rating\">\r\n          <meter\r\n            min=\"0\"\r\n            max=\"100\"\r\n            optimum=\"100\"\r\n            low=\"40\"\r\n            high=\"70\"\r\n            value={movie.vote_average * 10}\r\n          ></meter>\r\n          <p className=\"rmdb-score\">{movie.vote_average}</p>\r\n        </div>\r\n        {directors.length > 1 ? <h3>DIRECTORS</h3> : <h3>DIRECTOR</h3>}\r\n        {directors.map((element, i) => {\r\n          return (\r\n            <p key={i} className=\"rmdb-director\">\r\n              {element.name}\r\n            </p>\r\n          );\r\n        })}\r\n      </div>\r\n      <FontAwesome className=\"fa-film\" name=\"film\" size=\"5x\" />\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieInfo.propTypes = {\r\n  movie: PropTypes.object,\r\n  directors: PropTypes.array\r\n};\r\n\r\nexport default MovieInfo;\r\n","// Convert time to hours and minutes\nexport const calcTime = time => {\n  const hours = Math.floor(time / 60);\n  const mins = time % 60;\n  return `${hours}h ${mins}m`;\n};\n\n// Convert a number to $ format\nexport const convertMoney = money => {\n  var formatter = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"GHC\",\n    minimumFractionDigits: 0\n  });\n  return formatter.format(money);\n};\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport FontAwesome from \"react-fontawesome\";\r\nimport { calcTime, convertMoney } from \"../../../helpers.js\";\r\nimport \"./MovieInfoBar.css\";\r\n\r\nconst MovieInfoBar = props => (\r\n  <div className=\"rmdb-movieinfobar\">\r\n    <div className=\"rmdb-movieinfobar-content\">\r\n      <div className=\"rmdb-movieinfobar-content-col\">\r\n        <FontAwesome className=\"fa-time\" name=\"clock-o\" size=\"2x\" />\r\n        <span className=\"rmdb-movieinfobar-info\">\r\n          Running time: {calcTime(props.time)}\r\n        </span>\r\n      </div>\r\n      <div className=\"rmdb-movieinfobar-content-col\">\r\n        <FontAwesome className=\"fa-budget\" name=\"money\" size=\"2x\" />\r\n        <span className=\"rmdb-movieinfobar-info\">\r\n          Budget: {convertMoney(props.budget)}\r\n        </span>\r\n      </div>\r\n      <div className=\"rmdb-movieinfobar-content-col\">\r\n        <FontAwesome className=\"fa-revenue\" name=\"ticket\" size=\"2x\" />\r\n        <span className=\"rmdb-movieinfobar-info\">\r\n          Revenue: {convertMoney(props.revenue)}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nexport default MovieInfoBar;\r\n","import React from \"react\";\r\nimport { IMAGE_BASE_URL } from \"../../../config\";\r\nimport \"./Actor.css\";\r\n\r\nconst Actor = props => {\r\n  const POSTER_SIZE = \"w154\";\r\n  return (\r\n    <div className=\"rmdb-actor\">\r\n      <img\r\n        src={\r\n          props.actor.profile_path\r\n            ? `${IMAGE_BASE_URL}${POSTER_SIZE}${props.actor.profile_path}`\r\n            : \"./images/no_image.jpg\"\r\n        }\r\n        alt=\"actorthumb\"\r\n      />\r\n      <span className=\"rmdb-actor-name\">{props.actor.name}</span>\r\n      <span className=\"rmdb-actor-character\">{props.actor.character}</span>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Actor;\r\n","import React, { Component } from \"react\";\r\nimport { API_URL, API_KEY } from \"../../config\";\r\nimport Navigation from \"../elements/Navigation/Navigation\";\r\nimport MovieInfo from \"../elements/MovieInfo/MovieInfo\";\r\nimport MovieInfoBar from \"../elements/MovieInfoBar/MovieInfoBar\";\r\nimport FourColGrid from \"../elements/FourColGrid/FourColGrid.js\";\r\nimport Actor from \"../elements/Actor/Actor\";\r\nimport Spinner from \"../elements/Spinner/Spinner\";\r\nimport \"./Movie.css\";\r\n\r\nclass Movie extends Component {\r\n  state = {\r\n    movie: null,\r\n    actors: null,\r\n    directors: [],\r\n    loading: false\r\n  };\r\n\r\n  componentDidMount() {\r\n    // ES6 destructuring the props\r\n    const { movieId } = this.props.match.params;\r\n\r\n    if (localStorage.getItem(`${movieId}`)) {\r\n      let state = JSON.parse(localStorage.getItem(`${movieId}`));\r\n      this.setState({ ...state });\r\n    } else {\r\n      this.setState({ loading: true });\r\n      // First fetch the movie ...\r\n      let endpoint = `${API_URL}movie/${movieId}?api_key=${API_KEY}&language=en-US`;\r\n      this.fetchItems(endpoint);\r\n    }\r\n  }\r\n\r\n  fetchItems = endpoint => {\r\n    // ES6 destructuring the props\r\n    const { movieId } = this.props.match.params;\r\n\r\n    fetch(endpoint)\r\n      .then(result => result.json())\r\n      .then(result => {\r\n        if (result.status_code) {\r\n          // If we don't find any movie\r\n          this.setState({ loading: false });\r\n        } else {\r\n          this.setState({ movie: result }, () => {\r\n            // ... then fetch actors in the setState callback function\r\n            let endpoint = `${API_URL}movie/${movieId}/credits?api_key=${API_KEY}`;\r\n            fetch(endpoint)\r\n              .then(result => result.json())\r\n              .then(result => {\r\n                const directors = result.crew.filter(\r\n                  member => member.job === \"Director\"\r\n                );\r\n\r\n                this.setState(\r\n                  {\r\n                    actors: result.cast,\r\n                    directors,\r\n                    loading: false\r\n                  },\r\n                  () => {\r\n                    localStorage.setItem(\r\n                      `${movieId}`,\r\n                      JSON.stringify(this.state)\r\n                    );\r\n                  }\r\n                );\r\n              });\r\n          });\r\n        }\r\n      })\r\n      .catch(error => console.error(\"Error:\", error));\r\n  };\r\n\r\n  render() {\r\n    // ES6 Destructuring the props and state\r\n    const { movieName } = this.props.location;\r\n    const { movie, directors, actors, loading } = this.state;\r\n\r\n    return (\r\n      <div className=\"rmdb-movie\">\r\n        {movie ? (\r\n          <div>\r\n            <Navigation movie={movieName} />\r\n            <MovieInfo movie={movie} directors={directors} />\r\n            <MovieInfoBar\r\n              time={movie.runtime}\r\n              budget={movie.budget}\r\n              revenue={movie.revenue}\r\n            />\r\n          </div>\r\n        ) : null}\r\n        {actors ? (\r\n          <div className=\"rmdb-movie-grid\">\r\n            <FourColGrid header={\"Actors\"}>\r\n              {actors.map((element, i) => (\r\n                <Actor key={i} actor={element} />\r\n              ))}\r\n            </FourColGrid>\r\n          </div>\r\n        ) : null}\r\n        {!actors && !loading ? <h1>No movie found</h1> : null}\r\n        {loading ? <Spinner /> : null}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Movie;\r\n","import React from \"react\";\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div>\r\n      <h1>Whooops, This Page Doesn't exist</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from \"react\";\r\nimport { BrowserRouter, Route, Switch } from \"react-router-dom\";\r\nimport Header from \"../elements/Header/Header\";\r\nimport Home from \"../Home/Home\";\r\nimport Movie from \"../Movie/Movie\";\r\nimport NotFound from \"../elements/NotFound/NotFound\";\r\n\r\nconst App = () => (\r\n  <BrowserRouter>\r\n    <React.Fragment>\r\n      <Header />\r\n      <Switch>\r\n        <Route path=\"/\" component={Home} exact />\r\n        <Route path=\"/:movieId\" component={Movie} exact />\r\n        <Route component={NotFound} />\r\n      </Switch>\r\n    </React.Fragment>\r\n  </BrowserRouter>\r\n);\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App/App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}